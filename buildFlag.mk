set(CMAKE_TOOLCHAIN_FILE ${DCMAKE_TOOLCHAIN_FILE})
option(BUILD_DEBUG OFF)
if (BUILD_DEBUG)
	set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS} -ggdb -O0")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ggdb -O0")
else()
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
	set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS} -O3")
	set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -s")	
 	set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -s") 
endif()		

set(TARGET_PLATFORM  ${BUILD_TARGET})
if (TARGET_PLATFORM STREQUAL "k18")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=armv7-a -mtune=cortex-a7 -mfpu=neon -mfloat-abi=hard")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -pthread")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pthread -fPIC")
	set(CMAKE_ASM_FLAGS "${CMAKE_ASM_FLAGS} ${CMAKE_C_FLAGS} -x assembler-with-cpp")
	add_definitions(-DBF_DSP=1)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DBF_DSP")
elseif (TARGET_PLATFORM STREQUAL "a113")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -pthread -march=armv8-a -mtune=cortex-a53")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pthread -fPIC")
	set(CMAKE_ASM_FLAGS "${CMAKE_ASM_FLAGS} ${CMAKE_C_FLAGS} -x assembler-with-cpp -wa")
elseif (TARGET_PLATFORM STREQUAL "android")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${my_cxx_flags}")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${my_cxx_flags}")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -frtti -std=c++11 -fexceptions -pthread ")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pthread -std=c11  -fPIC -llog")
	set(CMAKE_ASM_FLAGS "${CMAKE_ASM_FLAGS} ${CMAKE_C_FLAGS} -x assembler-with-cpp")
	set(CMAKE_SYSROOT "${ANDROID_NDK}/platforms/android-${ANDROID_NATIVE_API_LEVEL}/arch-arm")
	message("android build flag ------------------sysroot:${CMAKE_SYSROOT}")
else()
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -pthread")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99 -pthread -fPIC")
	set(CMAKE_ASM_FLAGS "${CMAKE_ASM_FLAGS} ${CMAKE_C_FLAGS} -x assembler-with-cpp")
endif()

set( CMAKE_FIND_ROOT_PATH_MODE_PROGRAM BOTH )
set( CMAKE_FIND_ROOT_PATH_MODE_LIBRARY BOTH )
set( CMAKE_FIND_ROOT_PATH_MODE_INCLUDE BOTH )
